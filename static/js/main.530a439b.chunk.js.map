{"version":3,"sources":["components/ListItem/ListItem.css","components/Input/Input.css","logo.svg","components/Button/Button.css","components/Ul/Ul.css","container/Layout/Layout.css","components/Alert/Alert.css","App.css","serviceWorker.js","components/Hoc/Aux.js","components/Button/Button.js","components/Input/Input.js","components/Ul/Ul.js","components/ListItem/ListItem.js","components/Alert/Alert.js","container/Layout/Layout.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","aux","props","className","style","children","button","Aux","classes","Button","name","input","ListInput","onSubmit","submit","Inputs","type","placeholder","ul","Ul","ListItem","state","underline","checkRefHandler","console","log","inputElement","setState","Item","this","Ticked","UnTicked","item","Check","onClick","remove","Component","alert","Alert","Layout","arr","task","ticked","currentItem","displayAlert","addTaskHandler","e","value","document","querySelector","prevState","concat","setTimeout","preventDefault","removeTaskHandler","index","newArr","splice","tickTaskHandler","target","nextSibling","innerHTML","sibling","persist","inputValue","map","list","key","tick","keepTicked","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.530a439b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"ListItem__Item__1uJHF\",\"Check\":\"ListItem__Check__YEuHv\",\"Ticked\":\"ListItem__Ticked__nYENA\",\"UnTicked\":\"ListItem__UnTicked__gIQb_\",\"TargetChild\":\"ListItem__TargetChild__3vFMJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListInput\":\"Input__ListInput__3sAgm\",\"Inputs\":\"Input__Inputs__2bYle\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__3xqYU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Ul\":\"Ul__Ul__1AUTg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout__Layout__3fT6h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Alert\":\"Alert__Alert__3uJi3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App__23_S5\",\"App-logo\":\"App__App-logo__1ZbO4\",\"App-logo-spin\":\"App__App-logo-spin__2T_Ou\",\"App-header\":\"App__App-header__21xkG\",\"App-link\":\"App__App-link__19-AX\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\n\r\nconst aux =(props)=>(\r\n    <div className={props.style}>{props.children}</div>\r\n);\r\n\r\nexport default aux;","import React from 'react';\r\nimport Aux from '../Hoc/Aux';\r\nimport classes from './Button.css';\r\n\r\nconst button =(props)=>(\r\n    <Aux style={classes.Button}>\r\n        <button className={props.name}>{props.children}</button>\r\n    </Aux>\r\n)\r\n\r\nexport default button;","import React from 'react';\r\nimport Button from '../Button/Button';\r\nimport classes from './Input.css';\r\nimport Aux from '../Hoc/Aux';\r\n\r\nconst input =(props)=>(\r\n    <Aux style={classes.ListInput}>\r\n        <form onSubmit={props.submit}>\r\n             <Aux style={classes.Inputs}>\r\n                <input type={props.type}  placeholder={props.placeholder} />\r\n             </Aux>\r\n            <Button>Add Task</Button>\r\n        </form>\r\n    </Aux>\r\n);\r\n\r\n\r\nexport default input;","import React from 'react';\r\nimport Aux from '../Hoc/Aux';\r\nimport classes from './Ul.css'\r\n\r\nconst ul = (props)=>{\r\n    return(\r\n        <Aux style={classes.Ul}>\r\n            <ul>{props.children}</ul>\r\n        </Aux>\r\n        \r\n    );\r\n}\r\n\r\nexport default ul;","import React, { Component } from 'react';\r\nimport Aux from '../Hoc/Aux';\r\nimport classes from './ListItem.css'\r\n\r\n\r\nclass ListItem extends Component{\r\n\r\n    state={\r\n        underline:false\r\n    }\r\n   \r\n   checkRefHandler =()=>{\r\n       console.log(this.inputElement)\r\n       this.setState({\r\n           underline:!this.state.underline\r\n       })\r\n   }\r\n    \r\n    render(){\r\n        return(\r\n        <Aux style={classes.Item} >\r\n            <li  \r\n            className={this.state.underline?classes.Ticked:classes.UnTicked}>{this.props.item}</li>\r\n            {console.log(this.state.underline)}\r\n            <div className={classes.Check}>\r\n                <input type='checkbox'  onClick={this.checkRefHandler}/>\r\n                <h5 onClick={this.props.remove}>x</h5>\r\n            </div>\r\n         \r\n        </Aux>\r\n        )\r\n    }\r\n}\r\n\r\n// const listItem =(props)=>(\r\n//     <Aux style={classes.Item}>\r\n//         <li  className={props.isTicked && props.currentItem>=0?classes.Ticked:null}>{props.item}</li>\r\n//         <div className={classes.Check} onClick={props.tick}>\r\n//           <input type='checkbox' />\r\n//           <h5>x</h5>\r\n//         </div>\r\n        \r\n//     </Aux>\r\n    \r\n// )\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport Aux from '../Hoc/Aux';\r\nimport classes from './Alert.css';\r\n\r\n\r\nconst alert =(props)=>(\r\n     <Aux style={classes.Alert}>\r\n         <p>Please insert a value</p>\r\n     </Aux>\r\n);\r\n\r\n\r\n\r\nexport default alert;","import React,{Component} from  'react';\r\nimport Input from '../../components/Input/Input';\r\nimport Ul from '../../components/Ul/Ul';\r\nimport ListItem from '../../components/ListItem/ListItem';\r\nimport classes from './Layout.css';\r\nimport Alert from '../../components/Alert/Alert';\r\nimport { setTimeout } from 'timers';\r\n\r\n\r\nclass Layout extends Component{\r\n\r\nstate={\r\n    arr:[],\r\n    task:\"\",\r\n    ticked:false,\r\n    currentItem:null,\r\n    displayAlert:0\r\n}\r\n\r\naddTaskHandler =(e)=>{\r\n    // alert('Hey!');\r\n    var value;\r\n    if (document.querySelector('input').value) {\r\n        value = document.querySelector('input').value\r\n\r\n        this.setState(prevState=>{\r\n            return{arr:prevState.arr.concat(value),\r\n            displayAlert:0}\r\n        })\r\n    }else{\r\n        setTimeout(()=>{\r\n            this.setState({\r\n                displayAlert:1\r\n            })\r\n        },1000)\r\n        \r\n    }\r\n    \r\n   \r\n    \r\n    document.querySelector('input').value=''\r\n    \r\n    e.preventDefault()\r\n}\r\nremoveTaskHandler=(index)=>{\r\n     let newArr = [...this.state.arr];\r\n     newArr.splice(index,1);\r\n     console.log(newArr)\r\n     this.setState({\r\n         arr:newArr\r\n     })\r\n\r\n     \r\n}\r\n\r\ntickTaskHandler = (e,index) =>{\r\n    console.log(e.target.nextSibling.innerHTML)\r\n    console.log(this.inputElement)\r\n      \r\n        this.setState({ticked:!this.state.ticked,\r\n                        currentItem:index,\r\n                        sibling:e.target.nextSibling.innerHTML,\r\n                        });\r\n    \r\n    e.persist()\r\n}\r\n\r\nrender(){\r\n    return(\r\n        <div className={classes.Layout}>\r\n            <h1>Todo List App</h1>\r\n    {this.state.displayAlert?<Alert />:null}\r\n                <Input submit={this.addTaskHandler}\r\n                 placeholder=\"Add Task\"\r\n                 type=\"text\"\r\n                 value={this.state.inputValue}/>\r\n\r\n                 <Ul>\r\n                      {this.state.arr.map((list,index)=>(\r\n                        <ListItem \r\n                             key={list} \r\n                            //  ref= {inp =>{ this.inputElement = inp}}\r\n                             item={list} \r\n                             tick={(e)=>this.tickTaskHandler(e,index,list)} \r\n                             index={index}\r\n                             remove={()=>this.removeTaskHandler(index)}\r\n                             keepTicked={this.state.keepTicked}\r\n                             />  \r\n                      ))}\r\n                 </Ul>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default Layout;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Layout from './container/Layout/Layout'\n\nReactDOM.render(<Layout />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}